.segment "SLED"

.import _screen_init

.proc SLED

;1f8
.word bounce-1
.word bounce-1
.word bounce-1
.word bounce-1

;200
.byte $93,$22,$4D,$55,$4E,$44,$4F,$22,$2C,$38,$2C,$31,$3A,$00,$31,$00
;210
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;220
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;230
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;240
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;250
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;260
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;270
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;280
.byte $00,$00,$08,$00,$A0,$00,$0E,$0E,$04,$0A,$00,$04,$0A,$00,$00,$48
;290
.byte $EB,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;2a0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;2b0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;2c0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;2d0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;2e0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;2f0
.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
;300
.byte $8B,$E3,$83,$A4

;0304. It's a palindrome! Like Notlob.

bounce:
JMP escaped
.byte $A7,$E4,$A7,$86,$AE,$00,$00,$00,$00

;310
.byte $4C,$48,$B2,$00,$31,$EA,$66,$FE,$47,$FE,$4A,$F3,$91,$F2,$0E,$F2
;320
.byte $50,$F2,$33,$F3,$57,$F1,$CA,$F1,$ED,$F6,$3E,$F1,$2F,$F3,$66,$FE
;330
.byte $A5,$F4,$ED,$F5

escaped:
; Replace the bytes we overwrote earlier for our jump
LDA #$7C
LDX #$A5
LDY #$1A
STA bounce
STX bounce+1
STY bounce+2

LDA #$01
JSR _screen_init

.endproc
